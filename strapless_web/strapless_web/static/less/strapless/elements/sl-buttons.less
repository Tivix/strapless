// BUTTONS

@button-prefix: btn;

.make-sl-buttons-for(@semantic-colors);

.make-sl-buttons-for(@colors) {
  @length: length(@colors);

  .make-sl-button();

  .make-sl-button(@index:1) when (@index <= @length) {
    @color-name: extract(@colors, @index);
    @color: @@color-name;

    .@{button-prefix}-@{color-name} {
      &:extend(.sl-button-base all);
      .sl-button(@color);
    }

    .make-sl-button(@index + 1);
  }  
}

.sl-button(@color: @gray) {

  //.contrast-text-against(@color);
  .button-state();
  border-color: mix(@gray-darkest-base; @color; 60%);

  &:active,
  &.active,
  .open > .dropdown-toggle& {
    // .button-state(10%);

    &:hover,
    &:focus,
    &.focus {
      .button-state(2%);
    }
  }

  &:active,
  &.active,
  .open > .dropdown-toggle& {
    background-image: none;
  }

  &.disabled,
  &[disabled],
  fieldset[disabled] & {
    &:hover,
    &:focus {
      .button-state();
    }
  }

  .button-state(@darken:0;) {
    background-color: darken(@color, @darken);
  }
}

// button sizes

.sl-button-size(@font-size) {
  // @padding-top: @padding/2;
  // @padding-left: @padding;

  font-size:@font-size;
  // padding: @padding-top @padding-left;
  line-height: @font-size * 1.8;
  padding-left:@font-size;
  padding-right:@font-size;
}


// base styles

.sl-button-base {
  display: inline-block;
  text-align: center;
  vertical-align: middle;
  touch-action: manipulation;
  cursor: pointer;
  background-image: none; // Reset unusual Firefox-on-Android default style; see https://github.com/necolas/normalize.css/issues/214
  border: 1px solid transparent;
  border-bottom: 2px solid transparent;
  border-radius: @border-radius;
  outline: none;
  white-space: nowrap;
  .contrast-text-against(@gray);
  .sl-button-size(@font-size-base);
  .user-select(none);


  &:active {
    //.tab-focus();
    position:relative;
    top: 1px;
    border-bottom-width: 1px;
    margin-bottom:1px;
  }

  &:hover,
  &:focus,
  &.focus {
    text-decoration: none;
  }

  &:active,
  &.active {
    outline: 0;
    background-image: none;
  }

  &.disabled,
  &[disabled],
  fieldset[disabled] & {
    cursor: @cursor-disabled;
    .opacity(.65);
  }

  a& {
    &.disabled,
    fieldset[disabled] & {
      pointer-events: none; // Future-proof disabling of clicks on `<a>` elements
    }
  }

  &.lg {
    .sl-button-size(30px);
  }

  &.md {
    .sl-button-size(22px);
  }

  &.sm {
    .sl-button-size(18px);
  }

  &.xs {
    .sl-button-size(14px);
  }
}


// Link buttons
// -------------------------

// Make a button look and behave like a link
.@{button-prefix}-link {
  color: inherit;
  text-decoration: underline;
  font-weight: normal;
  border-radius: 0;

  &,
  &:active,
  &.active,
  &[disabled],
  fieldset[disabled] & {
    background-color: transparent;
    .box-shadow(none);
  }
  &,
  &:hover,
  &:focus,
  &:active {
    border-color: transparent;
  }
  &:hover,
  &:focus {
    // text-decoration: @link-hover-decoration;
    background-color: transparent;
  }
  &[disabled],
  fieldset[disabled] & {
    &:hover,
    &:focus {
      // color: @btn-link-disabled-color;
      text-decoration: none;
    }
  }
}


// Block button
// --------------------------------------------------

.@{button-prefix}-block {
  display: block;
  width: 100%;
}

// Specificity overrides
input[type="submit"],
input[type="reset"],
input[type="button"] {
  &.btn-block {
    width: 100%;
  }
}
