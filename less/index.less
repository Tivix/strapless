//this is the index.less for strapless-web, NOT strapless!

@import "strapless/strapless";
@import "strapless/sl-palette";
@import "strapless/sl-pattern";

@less-test: saturation(@color1);
@less-test-name: 'sat of color 1';

.rotate(@degrees) {
  -webkit-transform: rotate(@degrees);
      -ms-transform: rotate(@degrees);
       -o-transform: rotate(@degrees);
          transform: rotate(@degrees);
}

.sl-bg-catch(@background);

.sl-bg-catch(@color) {
  // users can select any seed color but not bg, this catches bad ones and doesn't show them

  body {
    background-color: @color;
    .contrast-text-against(@color);
  }
}

.sl-bg-catch(@color) when (luma(@color) > 85%) {
  // above a certain brightness, just use white
  body {
    background-color: white;
    .contrast-text-against(white);
  }
}

.sl-bg-catch(@color) when (saturation(@color) > 80%) {
  // for really saturated colors use white

  body {
    background-color: white;
    .contrast-text-against(white);
  }
}

.sl-bg-catch(@color) when (luma(@color) < 15%) {
  // for really dark schemes use a dark gray for better color pop

  body {
    background-color: @gray-darker;
    .contrast-text-against(@gray-darker);
  }
}

body {
  //padding:74px 0 0;
  font-family:  -apple-system, 
                BlinkMacSystemFont, 
                "Segoe UI", 
                Roboto, 
                Oxygen-Sans, 
                Ubuntu, 
                Cantarell, 
                "Helvetica Neue", 
                sans-serif;

  section:last-child {
    margin-bottom:0;
  }
}

#get_color1 {
  color: @color1;
}
#get_color2 {
  color: @color1a;
}
#get_color3 {
  color: @color1b;
}
#get_color4 {
  color: @color1c;
}

/*! Strapless colors */
// This outputs a palette to your CSS file
#strapless_colors {
  color1:  @color1;
  color1a: @color1a;
  color1b: @color1b;
  color1c: @color1c;
  color2:  @color2;
  color2a: @color2a;
  color2b: @color2b;
  color2c: @color2c;
  color3:  @color3;
  color3a: @color3a;
  color3b: @color3b;
  color3c: @color3c;
  color4:  @color4;
  color4a: @color4a;
  color4b: @color4b;
  color4c: @color4c;
}

#less_variable_test {

  .variable-test(@less-test; @less-test-name;);

  .variable-test(@less-test; @less-test-name;) {
    &:before {
      content: "@{less-test-name}: ";
    }
    &:after {
      display:block;
      content:"@{less-test}";
    }
  }

  .variable-test(@less-test; @less-test-name;) when (isColor(@less-test)) {
    &:before {
      display: inline-block;
      width: @padding;
      height: @padding;
      background: @less-test;
      content: "";
    }
    &:after {
      display:block;
      content:"@{less-test-name}: @{less-test}";
    }
  }

}

.color-wheel-test {
  margin: 0 auto;
  h1 {
    font-size: 10px;
    text-align: center;
    line-height: 42px;
  }

  > .color {
    display:block;
    width: 100px;
    position: absolute;
    top:37px;
    left:-7px;

    &:after {
      content:"";
      @width: 12px;
      display: block;
      width: @width;
      height: @width;
      border-radius: 50%;
    }
  }
}


.color-wheel-test(@color-wheel; @color: @base-color;) {
  @base-color-wheel: @@color-wheel;

  #strapless.load-color-wheels();

  position: relative;
  float: left;
  border: 1px solid @gray-lighter;
  border-radius: 50%;
  width: 88px;
  height: 88px;
  //clear: both;
  margin-right: 33px;
  margin-bottom: 21px;

  > * {
    &:after {
      font-size:10px;
      text-align: center;
      font-family:monospace;
      line-height:1;
    }
  }

  .color1 {
    &:after {
      background: @color;
      .contrast-text-against(@color);
      content:"1";
    }
  }

  .color2 {
    @spin: extract(@base-color-wheel, 1);
    @c: spin(@color, @spin);
    .rotate(@spin);
    &:after {
      background: @c;
      .contrast-text-against(@c);
      content:"2";
      .rotate(-@spin);
    }
  }

  .color3 {
    @spin: extract(@base-color-wheel, 2);
    @c: spin(@color, @spin);
    .rotate(@spin);
    &:after {
      background: @c;
      .contrast-text-against(@c);
      content:"3";
      .rotate(-@spin);
    }
  }

  .color4 {
    @spin: extract(@base-color-wheel, 3);
    @c: spin(@color, @spin);
    .rotate(@spin);
    &:after {
      background: @c;
      .contrast-text-against(@c);
      content:"4";
      .rotate(-@spin);
    }
  }
}

.iterate-through(@args; @ruleset) {
  @iterations: length(@args);

  .iterate();

  .iterate(@index: 1) when (@index <= @iterations) {

  }
}

.make-color-wheels-for();

.make-color-wheels-for(@wheels: @color-wheels;) {
  @iterations: length(@color-wheels);

  .make-color-wheel();

  .make-color-wheel(@index: 1) when (@index <= @iterations) {
    @wheel: extract(@wheels, @index);

    #color_wheel_@{wheel} {
      .color-wheel-test(@wheel);
    }

    .make-color-wheel(@index + 1);
  }
}

#gray_test {
  div {
    width: 20%;
    height: 80px;
    float: left;

    &:first-child {
      background: @gray-lighter;

    }

    &:nth-child(2) {
      background: @gray-light;
    }

    &:nth-child(3) {
      background: @gray;
    }

    &:nth-child(4) {
      background: @gray-dark;
    }

    &:nth-child(5) {
      background: @gray-darker;
    }

    &:last-child {
      .clearfix();
    }
  }
}

#gray_test_full {
  div {
    width: 100%/7;
    height: 80px;
    float: left;

    &:first-child {
      background: @gray-lightest-base;
    }

    &:nth-child(2) {
      background: @gray-lighter-base;
    }

    &:nth-child(3) {
      background: @gray-light-base;
    }

    &:nth-child(4) {
      background: @gray-base;
    }

    &:nth-child(5) {
      background: @gray-dark-base;
    }

    &:nth-child(6) {
      background: @gray-darker-base;
    }

    &:nth-child(7) {
      background: @gray-darkest-base;
    }

    &:last-child {
      .clearfix();
    }
  }
}

#semantic_color_test {
  height: 80px;

  div {
    width: 100%/6;
    height: 80px;
    float: left;

    &:first-child {
      background: @action;
    }

    &:nth-child(2) {
      background: @reaction;
    }

    &:nth-child(3) {
      background: @info;
    }

    &:nth-child(4) {
      background: @warning;
    }

    &:nth-child(5) {
      background: @success;
    }

    &:nth-child(6) {
      background: @failure;
    }

    &:last-child {
      .clearfix();
    }
  }
}

#semantic_base_test {
  height: 80px;
  margin-top: 0;

  div {
    width: 100%/6;
    height: 80px;
    float: left;

    &:first-child {
      background: @action-base;
    }

    &:nth-child(2) {
      background: @reaction-base;
    }

    &:nth-child(3) {
      background: @info-base;
    }

    &:nth-child(4) {
      background: @warning-base;
    }

    &:nth-child(5) {
      background: @success-base;
    }

    &:nth-child(6) {
      background: @failure-base;
    }

    &:last-child {
      .clearfix();
    }
  }
}

#demo_form {

  .on-desktop({
    font-size: 12px;
    position: fixed;
    bottom: @padding;
    right: @padding;
    z-index: 1000;
    max-width: 200px;
  });
}