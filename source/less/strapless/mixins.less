.contrast-text-against(@color: @background) when (default()) {
  // automatically sets contrastful text color given a background color

  .set-contrast-ratio-black() {
    .set-contrast-ratio(@color, black);
    @contrast-ratio-black: @contrast-ratio;
  }

  .set-contrast-ratio-white() {
    .set-contrast-ratio(@color, white);
    @contrast-ratio-white: @contrast-ratio;
  }

  .tint-or-shade(@color) when (@contrast-ratio-black > @contrast-ratio-white) {
    .shade-text-against(@color);
  }

  .tint-or-shade(@color) when (default()) {
    .tint-text-against(@color);
  }

  .set-contrast-ratio-black();
  .set-contrast-ratio-white();

  .tint-or-shade(@color);
}

.auto-contrast(@color: @background) {
  .set-contrast-ratio-black() {
    .set-contrast-ratio(@color, black);
    @contrast-ratio-black: @contrast-ratio;
  }

  .set-contrast-ratio-white() {
    .set-contrast-ratio(@color, white);
    @contrast-ratio-white: @contrast-ratio;
  }

  .tint-or-shade(@color) when (@contrast-ratio-black > @contrast-ratio-white) {
    .shade-text-against(@color);
  }

  .tint-or-shade(@color) when (default()) {
    .tint-text-against(@color);
  }

  .set-contrast-ratio-black();
  .set-contrast-ratio-white();

  .tint-or-shade(@color);
}

.contrast-text-against(@color: @background) when (luma(@color) = 100%) {
  // the objectively correct text color against white
  // arrived at by monks after years of meditation and seclusion

  color: #595959;
}

.tint-text-against(@color: @background;) {
  // adds white to color until contrast ratio is met

  @contrast-standard: 7;
  @start: 50%;
  @iterations: 10;
  @interval: unit(100 - @start)/@iterations;
  @tint: tint(@color, @start + @index*@interval);
  @index: 0;

  .tint-text(1, 1);

  .tint-text(@contrast-ratio, @index) when (@contrast-ratio < @contrast-standard) 
                                       and (@index < @iterations) {
    .set-contrast-ratio(@color, @tint);
    .tint-text(@contrast-ratio; @index + 1);
  }

  .tint-text(@contrast-ratio, @index) when (default()) {
    color: @tint;
  }
}

.shade-text-against(@color: @background;) {
  // adds black to color until contrast ratio is met

  @contrast-standard: 4.5;
  @start: 40%;
  @iterations: 12;
  @interval: unit((100% - @start)/@iterations);
  @shade: shade(@color, @start + @index*@interval);
  @index: 0;

  .shade-text(1, 0);

  .shade-text(@contrast-ratio, @index) when (@contrast-ratio < @contrast-standard) 
                                        and (@index < @iterations) {
    .set-contrast-ratio(@color, @shade);
    .shade-text(@contrast-ratio; @index + 1);
  }

  .shade-text(@contrast-ratio, @index) when (default()) {
    color: @shade;
  }
}

.set-contrast-ratio(@a, @b) {
  // sets variable @contrast-ratio to contrast ratio between two colors
  @l1: unit(luma(@a))/100;
  @l2: unit(luma(@b))/100;
  @contrast-ratio: round((@l1 + .05)/(@l2 + .05),2);
}

.set-contrast-ratio(@a, @b) when (luma(@b) > luma(@a)) {
  @l1: unit(luma(@b))/100;
  @l2: unit(luma(@a))/100;
  @contrast-ratio: round((@l1 + .05)/(@l2 + .05),2);
}

.set-contrast-ratio(@a, @b) when (luma(@b) = luma(@a)) {
  @contrast-ratio: 1;
}

.set-distance(@a, @b) {
  // sets variable @distance to distance between two colors

  @r-values-a-b: 2*(red(@b) - red(@a))*(red(@b) - red(@a));
  @g-values-a-b: 4*(green(@b) - green(@a))*(green(@b) - green(@a));
  @b-values-a-b: 3*(blue(@b) - blue(@a))*(blue(@b) - blue(@a));

  @distance: sqrt(@r-values-a-b + @g-values-a-b + @b-values-a-b);
}

.quadratic-compare(@compare, @c1, @c2) {
  // compares c1 and c2 to a given color, assigns a @farther and @closer

  .set-distance-m-c1();
  .set-distance-m-c2();

  .resolve();

  .set-distance-m-c1() {
    .set-distance(@compare, @c1);
    @distance-m-c1: @distance;
  }

  .set-distance-m-c2() {
    .set-distance(@compare, @c2);
    @distance-m-c2: @distance;
  }

  .resolve() when (@distance-m-c2 > @distance-m-c1) {
    @farther: @c2;
    @closer: @c1;
  }

  .resolve() when (default()) {
    @farther: @c1;
    @closer: @c2;
  }
}

.colorize(@color) {
  // sets a background color and makes sure text works with it
  background-color: @color;
  .contrast-text-against(@color);
}

.no-user-select() {
  -moz-user-select: -moz-none;
  -khtml-user-select: none;
  -webkit-user-select: none;
  -ms-user-select: none;
}

.clearfix() {
  &:before,
  &:after {
    content: " ";
    display: table;
  }
  &:after {
    clear: both;
  }
}

.make-color-classes-for(@colors) {
  // takes a list of variable names, creates color(ize) classes for them
  // names must have corresponding variables

  @iterations: length(@colors);

  .make-color-class(1);

  .make-color-class(@index) when (@index <= @iterations) {
    @color-name: extract(@colors, @index);
    @this-color: @@color-name;

    .@{color-name} {
      .colorize(@this-color);
    }

    .make-color-class(@index + 1);
  }
}