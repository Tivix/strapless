.make-palettes-for(@base-color; @demo-wheels);

.make-palettes-for(@color; @wheels) {
  // iterate through @wheels
  @iterations: length(@wheels);

  .make-palette();

  .make-palette(@index: 1) when (@index <= @iterations) {
    // grab our scheme name out of @wheels
    @scheme: extract(@wheels, @index);

    // each palette has a corresponding id
    #sl_@{scheme} {
      // &:before { content: "@{scheme}";}
      .make-swatches-for(@color; @all-colors; @scheme);
    }
    // make the next palette
    .make-palette(@index + 1);
  }
}

.make-swatches-for(@color; @color-list; @color-wheel) {
  // iterate through color-list
  @iterations: length(@color-list);

  .make-palette(@color; @color-wheel);
  .make-nth-swatch(1);

  .make-nth-swatch(@index) when (@index <= @iterations) {
    // color list is a list
    @swatch-name: extract(@color-list, @index);
    @swatch: @@swatch-name;

    .sl-@{swatch-name} {
      .sl-swatch(@swatch);
    }

    // make next swatch
    .make-nth-swatch(@index + 1);
  }
}

.sl-swatch(@color: @gray) {
  background-color: @color;
  border-color: darken(@color, 12%);
  .rotate(hue(@color));
}

.sl-swatch-base, .swatch {
  @size: 32px;
  @width: @size;
  @height: 40px;
  @margin: 4px;

  display: none; // palettes are divs with a bunch of divs inside, this hides unused ones

  float: left;

  font-size: 10px;

  min-width: @size;
  width: 48px;
  height: @height;
  border: 1px solid transparent;

  margin-bottom: 2px;
  margin-right: 2px;

  text-align: right;
  line-height: @height - 3px;

  display: block;

  border-radius: @border-radius/2;

  &:nth-child(4n + 1) { border-radius: 50%;}

  &:before {
    display: none;
  }

  .on-large-phone({
    position: relative;
    height: @height + 4;
  });  
}

.palettes {
  .clearfix();
  margin-bottom: @padding*5;
}

.sl-color-container {
    margin-bottom: 0;

}

.palette-preview {
  float: left;
  width: 48%;
  margin-right: 2%;
  margin-bottom: 0;
  position: relative;
  padding-top: @padding*2;
  //width: 56*4px + 40px;

  h3 {
    font-size: 14px;
    text-align: center;
    max-width: 200px;
  }

  &:before {
    display: block;
    text-align: center;
    width: 100%;
    margin-bottom: 12px;
  }

  .on-large-phone({
    max-width: 32%;
    margin-right: 2%;

    &:nth-child(3n) {
      margin-right: 0;
    }
  });

  .on-tablet({
    max-width: 23.5%;
    margin-right: 2%;

    &:nth-child(3n) {
      margin-right: 2%;
    }

    &:nth-child(4n) {
      margin-right: 0;
    }
  });
}



.sl-single-color {
  @width: 75px;
  @height: 40px;
  font-size: 12px;
  line-height: @height;
  width: @width;
  height: @height;
  margin-left: 4px;
  margin-right: 4px;
  padding: 0 6px;
  text-align: center;
}

.sl-gray {
  width: 95px;
}

.sl-color-action {
  .colorize(@action);
}

.sl-color-reaction {
  .colorize(@reaction);
}

.sl-color-info {
  .colorize(@info);
}

.sl-color-warning {
  .colorize(@warning);
}

.sl-color-success {
  .colorize(@success);
}

.sl-color-failure {
  .colorize(@failure);
}

.sl-color-gray-lighter {
  .colorize(@gray-lighter);
}

.sl-color-gray-light {
  .colorize(@gray-light);
}

.sl-color-gray {
  .colorize(@gray);
}

.sl-color-gray-dark {
  .colorize(@gray-dark);
}

.sl-color-gray-darker {
  .colorize(@gray-darker);
}

.sl-color-white {
  background: white;
  .contrast-text-against(white);
}

.sl-color-black {
  background: black;
  .contrast-text-against(black);
}