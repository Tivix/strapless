.button-elements(@rules) {
  button,
  .button,
  input[type="button"],
  input[type="submit"] { @rules();}
}

.button-elements({
  display: inline-block;
  text-align: center;
  vertical-align: middle;
  min-height: 32px;
  padding: .7em 1.62ch;
  touch-action: manipulation;
  cursor: pointer;
  background-image: none;
  // border: 1px solid transparent;
  border: none;
  border-radius: @border-radius;
  outline: none;
  white-space: nowrap;
  text-decoration: none;
  .button-color(@base-color);
  .make-buttons-for(@semantic-colors);
  .no-user-select();
});

.make-buttons-for(@colors) {
  // make buttons for a list of color variable names
  // buttons will use variable names as class names

  @length: length(@colors);

  .make-button();

  .make-button(@index:1) when (@index <= @length) {
    @color-name: extract(@colors, @index);
    @color: @@color-name;

    &.@{color-name} { .button-color(@color);}

    .make-button(@index + 1);
  }
}

.button-color(@color) when (@color = @warning) {
  .set-lumafix(@color; @ideal-warning);
  .contrast-text-against(@lumafix);
  &:active { background: darken(@lumafix, 5%);}
}

.button-color(@color) when (default()) {
  .set-lumafix(@color; @gray);
  .invert-text-against(@lumafix);
  &:active { background: darken(@lumafix, 5%);}
}
